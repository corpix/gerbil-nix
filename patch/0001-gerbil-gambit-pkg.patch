diff --git configure configure
index 2c8bff78..0ee6cfec 100755
--- configure
+++ configure
@@ -2,37 +2,22 @@
 set -e
 cd $(dirname "$0")
 
-# There are two ways that Gerbil may get version information:
-# 1. a version MANIFEST file, for git-less tarballs and builds (e.g. Nix, Guix)
-# 2. git, for regular development
-#
-# The format of the version MANIFEST file is as generated by ./manifest.sh
-# with quote-less shell definitions var=value for the following variables:
-# gerbil_stamp_version gambit_stamp_version gambit_stamp_ymd gambit_stamp_hms
-
 die() {
   echo "configuration failed"
   exit 1
 }
 
 usage() {
-    local gambit_config_help="$(cd src/gambit && ./configure --help | tail -n +63)"
-
     cat <<EOF
-This script configures the Gerbil and integrated Gambit build.
+This script configures the Gerbil.
 
 Usage: $0 [option] ... [var=value]...
 
-Options controlling integrated Gambit configuration:
-${gambit_config_help}
-
 Options understood and processed by Gerbil:
   --prefix=PREFIX       where to install Gerbil; default prefix is /opt/gerbil
-  --with-gambit=TAG     integrated gambit git tag to check out for the build;
-                        defaults to ${default_gambit_tag}
   --enable-march=ARCH   specify the machine architecture; it can be empty.
                         defaults to native
-  --enable-shared[=no]  do (not) use shared libraries for libgerbil and libgambit
+  --enable-shared[=no]  do (not) use shared libraries for libgerbil
   --disable-shared      default is to enable shared libraries
 
 Gerbil Standard Library features:
@@ -41,8 +26,6 @@ Gerbil Standard Library features:
   --disable-zlib
   --enable-sqlite       Enable or disable sqlite support; enabled by default
   --disable-sqlite
-
-Default integrated Gambit configuration: ${default_gambit_config}
 EOF
 }
 
@@ -72,8 +55,6 @@ else
   readonly gerbil_version="$(git describe --tags --always)"
 fi
 readonly gerbil_targets=""
-readonly default_gambit_tag=09335d95cab6931791c0a8497cbe915053ff8af3
-readonly default_gambit_config="--enable-targets=${gerbil_targets} --enable-single-host --enable-dynamic-clib --enable-default-runtime-options=tE8,f8,-8 --enable-trust-c-tco"
 prefix="/opt/gerbil"
 readonly cflags_opt="-foptimize-sibling-calls"
 readonly ldflags_rpath="-Wl,-rpath"
@@ -85,19 +66,7 @@ else
     readonly rpath_sep="="
 fi
 
-case $(uname) in
-    OpenBSD)
-        gambit_march=""
-        ;;
-    *)
-        gambit_march="native"
-        ;;
-esac
-
 gerbil_shared=f
-gambit_tag="${default_gambit_tag}"
-gambit_config="${default_gambit_config}"
-gambit_shared="--disable-shared"
 
 while [ $# -gt 0 ]; do
     case "$1" in
@@ -111,25 +80,13 @@ while [ $# -gt 0 ]; do
             shift
             ;;
 
-        --with-gambit=*)
-            gambit_tag=$(echo "$1" | cut -d = -f 2-)
-            shift
-            ;;
-
-        --enable-march=*)
-            gambit_march=$(echo "$1" | cut -d = -f 2-)
-            shift
-            ;;
-
         --enable-shared)
             gerbil_shared=t
-            gambit_shared="--enable-shared"
             shift
             ;;
 
         --disable-shared|--enable-shared=no)
             gerbil_shared=f
-            gambit_shared="--disable-shared"
             shift
             ;;
 
@@ -203,7 +160,6 @@ while [ $# -gt 0 ]; do
             shift
             ;;
         *)
-            gambit_config="${gambit_config} $1"
             shift
         ;;
     esac
@@ -226,34 +182,6 @@ else
     fi
 fi
 
-if [ ! -f MANIFEST -o ! -f src/gambit/configure ] ; then
-  git submodule init || die
-  git submodule update --force || die
-  (cd src/gambit && git fetch origin && git checkout "${gambit_tag}" && touch configure config.status) || die
-  unset gambit_stamp_version
-fi
-
-gambit_config="--prefix=${gerbil_prefix} --enable-march=${gambit_march} ${gambit_shared} ${gambit_config}"
-(export LDFLAGS="$LDFLAGS"; export CFLAGS="$CFLAGS"; cd src/gambit && ./configure $gambit_config ) || die
-
-if [ -n "$gambit_stamp_version" ] ; then
-  sed -i -e "s/^stamp:/stamp-orig:/" src/gambit/include/makefile
-  echo stamp: >> src/gambit/include/makefile
-  cat >> src/gambit/include/stamp.h <<EOF
-#ifndef ___STAMP_VERSION
-#define ___STAMP_VERSION "${gambit_stamp_version}"
-#endif
-
-#ifndef ___STAMP_YMD
-#define ___STAMP_YMD ${gambit_stamp_ymd}
-#endif
-
-#ifndef ___STAMP_HMS
-#define ___STAMP_HMS ${gambit_stamp_hms}
-#endif
-EOF
-fi
-
 rm -f build-env.sh
 cat > build-env.sh <<EOF
 GERBIL_PREFIX=${gerbil_prefix}
diff --git src/build.sh src/build.sh
index d1627187..fd3b7c3f 100755
--- src/build.sh
+++ src/build.sh
@@ -27,10 +27,13 @@ if [ "x${GERBIL_PREFIX:-}" = "x" ]; then
     echo "GERBIL_PREFIX is not set"
     exit 1
 fi
+if [ "x${GERBIL_BASE:-}" = "x" ]; then
+    echo "GERBIL_BASE is not set"
+    exit 1
+fi
 
 ## global constants
 readonly GERBIL_SOURCE="$(pwd -P)"
-readonly GERBIL_BASE="$(dirname "${GERBIL_SOURCE}")"
 readonly GERBIL_STAGE0="${GERBIL_BASE}/bootstrap"
 
 export GERBIL_SOURCE GERBIL_STAGE0
@@ -63,14 +66,6 @@ DYLD_FALLBACK_LIBRARY_PATH="$LD_LIBRARY_PATH"
 
 export LD_LIBRARY_PATH DYLD_LIBRARY_PATH DYLD_FALLBACK_LIBRARY_PATH
 
-if [ "x${GERBIL_BUILD_FLAGS:-}" != "x" ]; then
-    num_cores=$(build_flags_cores "${GERBIL_BUILD_FLAGS}")
-    if [ "x${num_cores:-}" != "x" ]; then
-        GERBIL_BUILD_CORES=${num_cores}
-        export GERBIL_BUILD_CORES
-    fi
-fi
-
 if [ "x${GERBIL_BUILD_CORES:-}" != "x" ]; then
     echo "--- using ${GERBIL_BUILD_CORES} cores for the build"
 fi
@@ -97,8 +92,6 @@ die() {
 
 target_setup() {
   local target="${1}"
-  rm -rf "${target:?}/bin"  # warning: `:?` necessary for safety
-  rm -rf "${target:?}/lib"  # warning: `:?` necessary for safety
   mkdir -p "${target}/bin"
   mkdir -p "${target}/lib"
   mkdir -p "${target}/include"
@@ -113,26 +106,28 @@ build_prepare() {
 }
 
 build_gambit() {
-  feedback_low "Building Gambit in ${GERBIL_BUILD_PREFIX}/gambit"
-  feedback_mid "Building core gambit"
-  (cd gambit && rm -rf boot gsc-boot) || die
-  (cd gambit && m="make -j ${GERBIL_BUILD_CORES:-1}" && $m bootstrap && $m from-scratch)
-
-  feedback_mid "Installing Gambit to ${GERBIL_BUILD_PREFIX}"
-  cp -v gambit/gsi/gsi "${GERBIL_STAGE0}/bin"
-  cp -v gambit/gsc/gsc gambit/bin/gambuild-C "${GERBIL_BUILD_PREFIX}/bin"
-  cp -v gambit/include/gambit.h gambit/include/gambit-not*.h "${GERBIL_BUILD_PREFIX}/include"
-  cp -v gambit/lib/*\#.scm "${GERBIL_BUILD_PREFIX}/lib"
-  cp -v gambit/lib/_define-syntax.scm "${GERBIL_BUILD_PREFIX}/lib"
-  cp -v gambit/gsc/*\#.scm "${GERBIL_BUILD_PREFIX}/lib"
-  cp -v gambit/lib/_gambit.c "${GERBIL_BUILD_PREFIX}/lib"
-  for f in lib/libgambit.so lib/libgambit.a lib/libgambit.dylib\
-           gsi/libgambitgsi.so gsi/libgambitgsi.a  gsi/libgambitgsi.dylib\
-           gsc/libgambitgsc.so gsc/libgambitgsc.a gsc/libgambitgsc.dylib;
+  feedback_mid "Linking Gambit ${GAMBIT_PKG} to ${GERBIL_BUILD_PREFIX}"
+  for bin in ${GAMBIT_PKG}/gambit/bin/*
+  do
+    ln -s "${bin}" "${GERBIL_STAGE0}/bin/$(basename "${bin}")"
+  done
+  for include in ${GAMBIT_PKG}/gambit/include/gambit.h gambit/include/gambit-not*.h
+  do
+    ln -s "${include}" "${GERBIL_BUILD_PREFIX}/include/$(basename "${include}")"
+  done
+  for lib in ${GAMBIT_PKG}/gambit/lib/*\#.scm \
+                          ${GAMBIT_PKG}/gambit/lib/_define-syntax.scm \
+                          ${GAMBIT_PKG}/gambit/lib/_gambit.c
   do
-      if [ -e gambit/$f ]; then
-          cp -v gambit/$f "${GERBIL_BUILD_PREFIX}/lib"
-      fi
+    ln -s "${lib}" "${GERBIL_BUILD_PREFIX}/lib/$(basename "${lib}")"
+  done
+  for f in libgambit.so libgambit.a libgambit.dylib \
+           libgambitgsi.so libgambitgsi.a libgambitgsi.dylib \
+           libgambitgsc.so libgambitgsc.a libgambitgsc.dylib
+  do
+    if [ -e ${GAMBIT_PKG}/lib/${f} ]; then
+      ln -s ${GAMBIT_PKG}/lib/${f} "${GERBIL_BUILD_PREFIX}/lib/${f}"
+    fi
   done
 }
 
